package com.cgt.mentor.role.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.cgt.mentor.role.entity.Role;
import com.cgt.mentor.role.entity.RoleById;
import com.cgt.mentor.role.entity.RoleList;
import com.cgt.mentor.role.entity.RoleStatusResponse;
import com.cgt.mentor.role.facade.RoleService;

@RestController
@RequestMapping("/role")
public class RoleController {

	@Autowired
	private RoleService service;
	
	@RequestMapping("/getAllRole")
	public RoleList getAllRole()
	{
		return this.service.getAll();
	}
	
	@RequestMapping("/getById/{id}")
	public Role getById(@PathVariable("id") Integer id)
	{
		return new Role(this.service.getById(id));
	}
	
	@RequestMapping("/save")
	public ResponseEntity<RoleStatusResponse> save(@RequestBody Role role)
	{
		RoleStatusResponse status = new RoleStatusResponse(this.service.save(role));
		
		if(!status.getRoleList())
			return new ResponseEntity<RoleStatusResponse>(status,HttpStatus.NOT_ACCEPTABLE);
		
		return new ResponseEntity<RoleStatusResponse>(status,HttpStatus.ACCEPTED);
	}
	
	@RequestMapping("/delete/{id}")
	public ResponseEntity<RoleStatusResponse> delete(@PathVariable("id") Integer id)
	{
		RoleStatusResponse status = new RoleStatusResponse(this.service.delete(id));
		
		if(!status.getRoleList())
			return new ResponseEntity<RoleStatusResponse>(status,HttpStatus.NOT_ACCEPTABLE);
		
		return new ResponseEntity<RoleStatusResponse>(status,HttpStatus.ACCEPTED);
	}
	
	@RequestMapping("/update")
	public ResponseEntity<RoleStatusResponse> update(@RequestBody Role role)
	{
		RoleStatusResponse status = new RoleStatusResponse(this.service.update(role));
		
		if(!status.getRoleList())
			return new ResponseEntity<RoleStatusResponse>(status,HttpStatus.NOT_ACCEPTABLE);
		
		return new ResponseEntity<RoleStatusResponse>(status,HttpStatus.ACCEPTED);
	}
}
