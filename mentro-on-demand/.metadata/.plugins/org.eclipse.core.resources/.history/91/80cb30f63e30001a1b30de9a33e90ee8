package com.cgt.mentor.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.cgt.mentor.entity.User;
import com.cgt.mentor.entity.UserById;
import com.cgt.mentor.entity.UserList;
import com.cgt.mentor.entity.UserStatusResponse;
import com.cgt.mentor.facade.UserService;

@RestController
@RequestMapping("/user")
public class UserController {

	@Autowired
	private UserService service;
	
	@RequestMapping("/")
	public String hello()
	{
		return "Hello";
	}
	
	@RequestMapping("/getAllUser")
	public ResponseEntity<UserList> getAllUser()
	{
		UserList list = this.service.getAll();
		
		if(list.getUsetList() == null)
			return new ResponseEntity<UserList>(list,HttpStatus.NOT_ACCEPTABLE);
		
		return new ResponseEntity<UserList>(list,HttpStatus.ACCEPTED);
	}
	
	@RequestMapping("/getById/{id}")
	public ResponseEntity<UserById> getById(@PathVariable("id") Integer id)
	{
		UserById byId = new UserById(this.service.getById(id));
		
		if(byId.getUserById() == null)
			return new ResponseEntity<UserById>(byId,HttpStatus.NOT_ACCEPTABLE);
		
		return new ResponseEntity<UserById>(byId,HttpStatus.ACCEPTED);
	}
	
	@RequestMapping("/save")
	public ResponseEntity<UserStatusResponse> save(@RequestBody User user)
	{
		UserStatusResponse status = new UserStatusResponse(this.service.save(user));
		System.out.println(status.getStatus());
		if(!status.getStatus())
			return new ResponseEntity<UserStatusResponse>(status,HttpStatus.NOT_ACCEPTABLE);
		
		return new ResponseEntity<UserStatusResponse>(status,HttpStatus.ACCEPTED);
	}
	
	@RequestMapping("/delete/{id}")
	public boolean delete(@PathVariable("id") Integer id)
	{
		return this.service.delete(id);
	}
	
	@RequestMapping("/update")
	public boolean update(@RequestBody User user)
	{
		return this.service.update(user);
	}
}
